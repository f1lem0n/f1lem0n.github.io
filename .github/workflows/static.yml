# Simple workflow for deploying static content to GitHub Pages
name: Build portfolio page from files

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Setup portfolio page
        shell: bash
        run: |
          ls -la pl
          
          files=$(find portfolio -type f)
          
          # PL

          echo "
          <!DOCTYPE html>
          <html lang="pl">

          <head>
              <title>FH | Portfolio</title>
              <meta charset="utf-8" />
              <link rel="stylesheet" href="../assets/css/main.css" />
              <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@latest/font/bootstrap-icons.css">
              <script src="/assets/js/reusable_component.js" type="text/javascript" defer></script>
          </head>

          <body class="light-theme">
              <header-pl></header-pl>
              <div class="page-container">
                  <side-panel-pl></side-panel-pl>
                  <div class="content-container">
                  <table>
                      <tr>
                          <th>Plik</th>
                          <th>JÄ™zyk</th>
                      </tr>
          " > pl/portfolio.html

          for f in $files; do
              title=$(echo $f | grep -o /../.\* | grep -o "[A-Za-z_.]\{3,\}")
              echo $title
              lang=$(echo $f | grep -o /../ | grep -o [a-z].)
              echo "
                      <tr>
                          <td><a href=\"/$f\">$title</a></td>
                          <td>$lang</td>
                      </tr>" >> pl/portfolio.html
          done

          echo "
                  </table>
                  </div>
              </div>
          </body>

          </html>
          " >> pl/portfolio.html


          # EN

          echo "
          <!DOCTYPE html>
          <html lang="en">

          <head>
              <title>FH | Portfolio</title>
              <meta charset="utf-8" />
              <link rel="stylesheet" href="../assets/css/main.css" />
              <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@latest/font/bootstrap-icons.css">
              <script src="/assets/js/reusable_component.js" type="text/javascript" defer></script>
          </head>

          <body class="light-theme">
              <header-en></header-en>
              <div class="page-container">
                  <side-panel-en></side-panel-en>
                  <div class="content-container">
                  <table>
                      <tr>
                          <th>File</th>
                          <th>Language</th>
                      </tr>
          " > en/portfolio.html

          for f in $files; do
              title=$(echo $f | grep -o /../.\* | grep -o "[A-Za-z_.]\{3,\}")
              lang=$(echo $f | grep -o /../ | grep -o [a-z].)
              echo "
                      <tr>
                          <td><a href=\"/$f\">$title</a></td>
                          <td>$lang</td>
                      </tr>" >> en/portfolio.html
          done

          echo "
                  </table>
                  </div>
              </div>
          </body>

          </html>
          " >> en/portfolio.html
          
          ls -la pl
          
      - name: Push to the repository
        shell: bash
        run: |
          git status
          git remote set-url origin ${{ secrets.ssh }}
          git status
          git add .
          git commit -m"update portfolio page"
          git push origin HEAD:main
